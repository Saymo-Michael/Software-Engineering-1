/* background-designTop */
:root {
  --orange: #f78c6b;
  --blue: #4ac0c0;
  --yellow: #ffd166;
}

/* logo-container */
.logo_container {
  z-index: 1000;
  --background-color: green;
}

.logo {
  margin: 30px 0 0 20px;
  width: 70px;
  height: 70px;
  background-image: url(../Images/logo.png);
  background-repeat: no-repeat;
  background-size: contain;
  --background-color: blue;
}

.BarShadow {
  box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.3);
}

.background_designTop {
  z-index: 999;
  display: flex;
  flex-direction: column;
  justify-items: start;
  --background-color: red;
}

.BarTop {
  height: 120px;
  border-radius: 0px 50px 50px 0px;
}

.orangeTop {
  width: 25%;
  margin-bottom: -30px;
  z-index: 3;
  background-color: var(--orange);
}

.blueTop {
  width: 20%;
  margin-bottom: -40px;
  z-index: 2;
  background-color: var(--blue);
}

.yellowTop {
  width: 15%;
  z-index: 1;
  background-color: var(--yellow);
}

/* button.getStarted */
.getStarted {
  width: 210px;
  z-index: 1000;
  font-family: "Big Shoulders Display";
  color: black;
  font-size: 30px;
  font-weight: 700;
  border-color: black;
  background-color: transparent;
  border-radius: 50px;
}

button.getStarted:hover {
  background-color: rgba(0, 0, 0, 0.15);
}

.arrowLeft {
  color: black;
  margin: 0 0 5px 10px;
  font-size: 30px;
}

.backbutton_line {
  padding: 0;
  margin: 20px 0 0 0;
  height: 1px;
  width: 60%;
  background-color: black;
}

.question {
  margin: 20px 2px 2px 2px;
  font-family: "Big Shoulders Display";
  font-weight: 800;
  font-size: 30px;
  text-align: center;
  color: black;
}

.question_top_line {
  height: 1px;
  width: 90%;
  background-color: black;
}

/* emoji */

.emoji {
  width: 30%;
}

.emoji_button {
  width: 270px !important;
  z-index: 1000;
  font-family: "Big Shoulders Display";
  color: white !important;
  border-color: black;
  border-radius: 20px;
}

.emoji_button:hover {
  background-color: rgba(0, 0, 0, 0.15) !important;
}

.emoji_button_orange {
  background-color: var(--orange) !important;
}
.emoji_button_blue {
  background-color: var(--blue) !important;
}
.emoji_button_yellow {
  background-color: var(--yellow) !important;
}

.emoji_text {
  font-family: "Big Shoulders Display";
  font-size: 30px;
  font-weight: 600;
  white-space: pre-line;
}

/* background-designBot */
.background_designBot {
  z-index: 999;
  display: flex;
  flex-direction: column;
  --background-color: red;
}

.BarBot {
  height: 120px;
  border-radius: 50px 0px 0px 50px;
}

.orangeBot {
  width: 30%;
  margin-bottom: -30px;
  z-index: 3;
  background-color: var(--orange);
}

.blueBot {
  width: 35%;
  margin-bottom: -40px;
  z-index: 2;
  background-color: var(--blue);
}

.yellowBot {
  width: 25%;
  z-index: 1;
  background-color: var(--yellow);
}

/*customm*/
.lesson_container {
  max-height: 80vh;
  overflow-y: auto; /* Scroll when content overflows */
  --background-color: navy; /* Keep the navy background */
}

.lessonCard {
  border: 2px solid black;
  box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.3);
  margin-bottom: 20px;
  padding: 10px;
  flex: 1 0 auto; /* Allow cards to grow/shrink properly */
}

.lessonTitle {
  font-family: "Big Shoulders Text", sans-serif;
  font-size: 40px;
  font-weight: 700;
}

.startButton {
  width: 100%;
  background-color: #007bff;
  color: white;
}

.lockedButton {
  width: 100%;
  background-color: grey;
  color: white;
}

.textCol {
  background-color: orange;
  padding: 20px;
  min-height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.lessonText {
  font-family: "Big Shoulders Display", sans-serif;
  font-size: 1.5rem;
  font-weight: bold;
  text-align: center;
}

.imageContainer {
  background-color: violet;
  padding: 10px;
  border-radius: 10px;
}

.carouselImage {
  width: 100%;
}

.mobile_scrolling {
  overflow: hidden !important;
}
@media (min-width: 320px) {
  .logo {
    margin: 10px 0 0 10px;
    width: 75px;
    height: 75px;
  }
  .getStarted {
    width: 65px;
    font-size: 0px;
    border-radius: 100%;
  }
  .arrowLeft {
    padding: 0;
    margin: 0;
    color: black;
    font-size: 50px;
    padding-right: 10px;
  }
  .emoji {
    width: 20%;
  }
  .emoji_button {
    width: 200px;
  }
}

@media (min-width: 370px) {
  .question_top_line {
    width: 92%;
  }
}

@media (min-width: 425px) {
}

@media (min-width: 768px) {
  .logo {
    margin: 10px 0 0 10px;
    width: 60px;
    height: 60px;
  }
  .getStarted {
    width: 210px;
    font-size: 30px;
    border-radius: 50px;
    margin-right: 15px;
  }
  .backbutton_line {
    margin-right: 15px;
  }
  .BarTop {
    height: 100px;
  }
  .BarBot {
    height: 100px;
  }
  .emoji_button {
    width: 230px !important;
    color: white !important;
  }
  .question {
    margin: 0px 2px 20px 2px;
    font-size: 45px;
  }
}

@media (min-width: 1024px) {
  .BarTop {
    height: 70px;
  }
  .BarBot {
    height: 70px;
  }
  .getStarted {
    width: 180px;
    font-size: 25px;
  }
  .arrowLeft {
    font-size: 30px;
  }
  .backbutton_line {
    width: 32%;
  }
  .question {
    font-size: 35px;
  }
  .emoji_text {
    font-size: 25px;
  }
  .emoji_button {
    width: 300px !important;
  }
  .lesson_container {
    max-height: 77vh;
  }
}

@media (min-width: 1440px) {
  .BarTop {
    height: 88px;
  }
  .BarBot {
    height: 88px;
  }
  .getStarted {
    margin-right: 40px;
    width: 210px;
    font-size: 30px;
    border-radius: 50px;
  }
  .arrowLeft {
    font-size: 30px;
  }
  .backbutton_line {
    width: 25%;
    margin-right: 40px;
  }
  .question {
    margin: 0px 2px 20px 2px;
    font-size: 50px;
  }
  .emoji_text {
    font-size: 35px;
  }
  .emoji_button {
    width: 300px !important;
  }
  .lesson_container {
    max-height: 80vh;
  }
}

@media (min-width: 2560px) {
}

/* Smooth transitions */
.carousel {
  overflow: hidden;
}

.carousel-item {
  transition: transform 0.6s ease-in-out !important;
  display: flex !important;
  align-items: center;
}

/* Hide inactive slides */
.carousel-item:not(.active) {
  position: absolute;
  display: block !important;
  visibility: hidden;
  opacity: 0;
}

/* Active slide positioning */
.carousel-item.active {
  position: relative;
  transform: translateX(0);
  opacity: 1;
  visibility: visible;
}

/* Next/prev slide positioning */
.carousel-item-next:not(.carousel-item-start),
.carousel-item-prev:not(.carousel-item-end) {
  transform: translateX(0);
  opacity: 0;
  visibility: hidden;
}
